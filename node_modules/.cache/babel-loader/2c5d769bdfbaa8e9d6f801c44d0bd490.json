{"ast":null,"code":"var _jsxFileName = \"E:\\\\MovieBuff_React-Hooks\\\\src\\\\components\\\\pagination.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changePage } from '../actions';\n\nfunction Pagination() {\n  const props = useSelector(state => ({\n    pageCount: state.pageCount,\n    currentPage: state.currentPage,\n    pageNumbers2Display: state.pageNumbers2Display\n  }));\n  const dispatch = useDispatch(); //Handle next and previous buttons\n\n  const changePage = event => {\n    event.preventDefault;\n    const currentPage = props.currentPage,\n          pageCount = props.pageCount,\n          pageNumbers2Display = props.pageNumbers2Display;\n    let newPage = 1;\n    let extraPages2Jump = 3;\n    let page2JumpFrom;\n\n    switch (event.currentTarget.id) {\n      case 'p-page':\n        //previous\n        newPage = currentPage > 1 ? currentPage - 1 : 1;\n        break;\n\n      case 'n-page':\n        //next\n        newPage = currentPage < pageCount ? currentPage + 1 : pageCount;\n        break;\n\n      case 'f-page':\n        //first\n        newPage = 1;\n        break;\n\n      case 'l-page':\n        //last\n        newPage = pageCount;\n        break;\n\n      case 'e-dots':\n        //last dots\n        page2JumpFrom = currentPage <= pageNumbers2Display ? pageNumbers2Display : currentPage + 2;\n        newPage = page2JumpFrom + extraPages2Jump <= pageCount ? page2JumpFrom + extraPages2Jump : currentPage;\n        break;\n\n      case 's-dots':\n        //first dots\n        page2JumpFrom = currentPage >= pageCount - (pageNumbers2Display - 1) ? pageCount - (pageNumbers2Display - 1) : currentPage - 2;\n        newPage = page2JumpFrom - 3 >= 1 ? page2JumpFrom - 3 : 1;\n        break;\n\n      default:\n        // page numbers\n        newPage = Number(event.currentTarget.id);\n      //using event.target would reference to child tag (a). So use event.currentTarget\n    }\n\n    dispatch(changePage(newPage));\n  };\n\n  const prevPage = () => {\n    return React.createElement(\"li\", {\n      key: \"p-page\",\n      id: \"p-page\",\n      onClick: changePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, \"<\"));\n  };\n\n  const nextPage = () => {\n    return React.createElement(\"li\", {\n      key: \"n-page\",\n      id: \"n-page\",\n      onClick: changePage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      href: \"/#\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \">\"));\n  };\n\n  const currentPage = props.currentPage,\n        pageCount = props.pageCount,\n        pageNumbers2Display = props.pageNumbers2Display; //for pages less than twice as mush as pageNumbers2Display, display all the page numbers,\n  //cause its pointless to show extra buttons in this case scenarios\n\n  const shouldDisplayExtraButtons = pageCount - pageNumbers2Display >= pageNumbers2Display;\n\n  function getPageNumberList() {\n    const list = [];\n\n    if (shouldDisplayExtraButtons) {\n      let i = currentPage <= pageNumbers2Display ? 1 : currentPage + pageNumbers2Display > pageCount ? pageCount - (pageNumbers2Display - 1) : currentPage - Math.floor(pageNumbers2Display / 2);\n      let toNumber = i + pageNumbers2Display;\n\n      for (i; i < toNumber; i++) {\n        list.push(i);\n      }\n    } else {\n      for (let i = 1; i <= Math.ceil(pageCount); i++) {\n        list.push(i);\n      }\n    }\n\n    return list;\n  }\n\n  const RenderPageNumbers = () => {\n    return getPageNumberList().map(number => {\n      return React.createElement(\"li\", {\n        className: currentPage === number ? 'active' : '',\n        key: number,\n        id: number,\n        onClick: e => changePage(e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"/#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, number));\n    });\n  };\n\n  const FirstPage = () => {\n    if (currentPage > pageNumbers2Display && shouldDisplayExtraButtons) {\n      return React.createElement(\"li\", {\n        className: currentPage === 1 ? ' active' : '',\n        key: \"f-page\",\n        id: \"f-page\",\n        onClick: changePage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"/#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"1\"));\n    } else return null;\n  };\n\n  const LastPage = () => {\n    if (currentPage < pageCount - (pageNumbers2Display - 1) && shouldDisplayExtraButtons) {\n      return React.createElement(\"li\", {\n        className: currentPage === pageCount ? ' active' : '',\n        key: \"l-page\",\n        id: \"l-page\",\n        onClick: changePage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"/#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, pageCount));\n    } else return null;\n  };\n\n  const StartDots = () => {\n    if (currentPage > pageNumbers2Display && shouldDisplayExtraButtons) {\n      return React.createElement(\"li\", {\n        key: \"sdots\",\n        id: \"s-dots\",\n        onClick: changePage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"/#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"...\"));\n    } else return null;\n  };\n\n  const EndDots = () => {\n    if (currentPage < pageCount - (pageNumbers2Display - 1) && shouldDisplayExtraButtons) {\n      return React.createElement(\"li\", {\n        key: \"edots\",\n        id: \"e-dots\",\n        onClick: changePage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"/#\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"...\"));\n    } else return null;\n  };\n\n  if (pageCount > 1) {\n    return React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(\"ul\", {\n      className: \"pagination\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, prevPage(), React.createElement(FirstPage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }), React.createElement(StartDots, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }), React.createElement(RenderPageNumbers, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }), React.createElement(EndDots, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }), React.createElement(LastPage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), nextPage()));\n  } else return null;\n}\n\nexport default Pagination;","map":{"version":3,"sources":["E:\\MovieBuff_React-Hooks\\src\\components\\pagination.js"],"names":["React","useState","useEffect","useSelector","useDispatch","changePage","Pagination","props","state","pageCount","currentPage","pageNumbers2Display","dispatch","event","preventDefault","newPage","extraPages2Jump","page2JumpFrom","currentTarget","id","Number","prevPage","nextPage","shouldDisplayExtraButtons","getPageNumberList","list","i","Math","floor","toNumber","push","ceil","RenderPageNumbers","map","number","e","FirstPage","LastPage","StartDots","EndDots"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport {changePage} from '../actions';\r\n\r\nfunction Pagination() {\r\n\r\n  const props = useSelector(\r\n    state => ({\r\n      pageCount: state.pageCount,\r\n      currentPage: state.currentPage,\r\n      pageNumbers2Display: state.pageNumbers2Display\r\n    })\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  //Handle next and previous buttons\r\n  const changePage = (event) => {\r\n    event.preventDefault;\r\n    const { currentPage, pageCount, pageNumbers2Display } = props;\r\n    let newPage = 1;\r\n    let extraPages2Jump = 3;\r\n    let page2JumpFrom;\r\n    switch (event.currentTarget.id){\r\n      case 'p-page'://previous\r\n        newPage = currentPage > 1 ? currentPage - 1 : 1;\r\n      break;\r\n      case 'n-page'://next\r\n        newPage = currentPage < pageCount ? currentPage + 1 : pageCount;\r\n      break;\r\n      case 'f-page'://first\r\n        newPage = 1;\r\n      break;\r\n      case 'l-page'://last\r\n        newPage = pageCount;\r\n      break;\r\n      case 'e-dots'://last dots\r\n        page2JumpFrom = currentPage <= pageNumbers2Display ? pageNumbers2Display : currentPage + 2;\r\n        newPage = page2JumpFrom + extraPages2Jump <= pageCount ? page2JumpFrom + extraPages2Jump : currentPage;\r\n      break;\r\n      case 's-dots': //first dots\r\n        page2JumpFrom = currentPage >= pageCount - (pageNumbers2Display - 1) ? pageCount - (pageNumbers2Display - 1) :  currentPage - 2;\r\n        newPage = page2JumpFrom - 3 >= 1 ? page2JumpFrom - 3 : 1;\r\n      break;\r\n      default: // page numbers\r\n        newPage = Number(event.currentTarget.id); //using event.target would reference to child tag (a). So use event.currentTarget\r\n    }\r\n\r\n    dispatch(changePage(newPage));\r\n  }\r\n\r\n  const prevPage = () => {\r\n      return (\r\n        <li key=\"p-page\" id=\"p-page\" onClick={changePage}>\r\n          <a href=\"/#\">&lt;</a>\r\n        </li>\r\n      )\r\n  }\r\n\r\n  const nextPage = () => {\r\n    return (\r\n      <li key=\"n-page\" id=\"n-page\" onClick={changePage}>\r\n        <a href=\"/#\">&gt;</a>\r\n      </li>\r\n    )\r\n  }\r\n\r\n  const { currentPage, pageCount, pageNumbers2Display } = props;\r\n  //for pages less than twice as mush as pageNumbers2Display, display all the page numbers,\r\n  //cause its pointless to show extra buttons in this case scenarios\r\n  const shouldDisplayExtraButtons = pageCount - pageNumbers2Display >= pageNumbers2Display;\r\n  function getPageNumberList() {\r\n    const list = [];\r\n    if(shouldDisplayExtraButtons) {\r\n      let i = currentPage <= pageNumbers2Display ? 1 :\r\n            currentPage + pageNumbers2Display > pageCount ? pageCount - (pageNumbers2Display - 1) :\r\n              currentPage - (Math.floor(pageNumbers2Display / 2));\r\n      let toNumber = i + pageNumbers2Display;\r\n      for (i; i < toNumber; i++) {\r\n        list.push(i);\r\n      }\r\n    }\r\n    else {\r\n      for (let i = 1; i <= Math.ceil(pageCount); i++) {\r\n        list.push(i);\r\n      }\r\n    }\r\n    return list;\r\n  }\r\n\r\n  const RenderPageNumbers = () => {\r\n    return (\r\n      getPageNumberList().map(number => {\r\n       return (\r\n         <li className={currentPage === number ? 'active' : ''} key={number} id={number} onClick={(e)=>changePage(e)}>\r\n           <a href=\"/#\">{number}</a>\r\n         </li>\r\n       );\r\n     })\r\n    );\r\n  }\r\n\r\n  const FirstPage = () => {\r\n    if((currentPage > pageNumbers2Display) && shouldDisplayExtraButtons) {\r\n      return (\r\n        <li className = {currentPage === 1 ? ' active' : ''} key=\"f-page\" id=\"f-page\" onClick ={changePage} >\r\n          <a href=\"/#\">1</a>\r\n        </li>\r\n      )\r\n\t\t}\r\n\t\telse\r\n\t\t\treturn null;\r\n  }\r\n\r\n  const LastPage = () => {\r\n\t\t\tif((currentPage < pageCount - (pageNumbers2Display - 1)) && shouldDisplayExtraButtons) {\r\n        return (\r\n          <li className = {currentPage === pageCount ? ' active' : ''} key=\"l-page\" id=\"l-page\" onClick ={changePage} >\r\n            <a href=\"/#\">{pageCount}</a>\r\n          </li>\r\n        )\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t\treturn null;\r\n\t}\r\n\r\n  const StartDots = () => {\r\n    if((currentPage > pageNumbers2Display) && shouldDisplayExtraButtons) {\r\n      return (\r\n        <li key=\"sdots\" id=\"s-dots\" onClick ={changePage} >\r\n          <a href=\"/#\">...</a>\r\n        </li>\r\n      )\r\n    }\r\n    else\r\n      return null;\r\n  }\r\n\r\n  const EndDots = () => {\r\n    if((currentPage < pageCount - (pageNumbers2Display - 1)) && shouldDisplayExtraButtons) {\r\n      return (\r\n        <li key=\"edots\" id=\"e-dots\" onClick ={changePage} >\r\n          <a href=\"/#\">...</a>\r\n        </li>\r\n      )\r\n    }\r\n    else\r\n      return null;\r\n  }\r\n\r\n  if(pageCount > 1) {\r\n    return (\r\n      <div className=\"row\">\r\n        <ul className=\"pagination\">\r\n          {prevPage()}\r\n          <FirstPage />\r\n          <StartDots />\r\n          <RenderPageNumbers />\r\n          <EndDots />\r\n          <LastPage />\r\n          {nextPage()}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n  else\r\n    return null;\r\n}\r\n\r\nexport default Pagination;\r\n"]},"metadata":{},"sourceType":"module"}